<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJ
        TUUH4woVDjMgtOgUcgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAtWSURBVHhe
        7Z137GxVEcefXbEgArGBBUuwYbArWDFqFDUYsYFggkosKIpBFEGNiVFsURPFkoAoSFexYItgsKCCDRVs
        2EUDigp2Ab+fx1syzO/sY9/uPffM2Z1v8vnj7dv37ty7c0+ZM2fOulQqlUqlUqlUKnV1bSF2Ek8XLxeH
        ifeJD4jjxXEb/ny4eKN4qXiKeIC4iUh1pm3FC8SJ4nxxxQJcJs4VHxF7ia1EKqB4U/cVZ4nSDzkU/xOn
        i2eK64tUY/HDv0H8RZR+sJpcIOguridSDfQM8TtR+nFK4CQ/FF8U9P3HCvr+92/4M3xZnCcuFaX/owRd
        xCNFaiTdSDCAK/0YE/4tviReJR4jbik2VbcTu4rXiTMFzX/pWsDfvVZcW6QqanPxdVH6EeAbYh9xUzG0
        GADuL34kStcGBp7ZJVTSzQRvYunBf1vsIsbQtcTTxM9EyZaTRTrBwKJp/aTwD/u/gia6RdN7A/FOcbnw
        dhFrSA2oVwr/kC8RjxCt9SyBI1rbcIoniNQA2k78U9gH/Hexs4giugSCRtbG34sbi9SCKo34nyOi6U3C
        2/lqkVpA2wimdPahniQi6rqCwai19WKxmUjNKaJ89oH+R9xJRNXjhbUX9hCpOfV9YR8m0bro+q6wNn9G
        rIRoAu8mdhdExd4tjhAER74gmB9/WLDseojge/cU0xZV7ijsgwTesOg6UFibCSsvbVyApdcXis8JP1Kf
        lX+IU8V+gh99IkbW9nv/EoSBo+sewtoNDxRLpYcKAjOlIMgiMJX6tCB+//oNn02gO+hBBKX+Kqzte4ul
        EE086+H25mrhgys99P8TnSOs7UQru9Z1xKHCT8lK8B0ewMfEUeK9gjkyff8xgjec6RIj+tK/n8Y7RC9i
        JdLaTsi4W5F0cYqwN2RhKZQ19gMEgzoGg7OIWPr9BGOI04SPpHneJnrRx4W1nQFxl2L5dVqa1d8Eix63
        F0OIAeXB4s+idD2SN3oRUz9r+1tEd2LEPa2/Zzp3a1FDW4p3Cd9F9OQAzGqs7XSB3YlUKXsTwCIMq19j
        6ARhr50OMKKeKuwNAFObB4mxxKjfXj8dYCSRTsVSpr0BRvbM/cdUzw7wWWFt78oB2B1jjQeidGMrHaCB
        GPX7HHtSpcmDG1s9OwChcWt7Nw7ARgdrOHPze4kWSgdooK8KazgBjVZKBxhZZN/4xZ3dRCv17ACfF9b2
        LhyAHbXWaNKZbihaKR1gZJG8YY0mgaOlenYAEmCs7V04gE9lYl9dK91c/EpYe3p2ALashc8KulBYo9l9
        20pHCmsL9OwAwEJXaPlVOMLBLUTWr9+J+wvBBpFeRHkZxlD2Hni+oUvORHEAn1TJqiB5dr2plCJO7aGw
        iuIAZBJZO8gq7lV+XBU6LyCKA3xNWDtIRetVHxL2Xig2FVZRHMBnILEzuFcxcLX3wtQ2rNIBhlc6wBxK
        B2ikdIDhlQ4wh9IBGujewmfhsnmzhdIBRhYrfj8V1lBIB1hcXTjAS4Q1Er4pbiFaKB1gZH1LWCN/Keap
        rDmUviKsPdQa6FVHC3sv/DmU2Mrsd+HuKVqK+v3WntZ5CYuI2sT2Xt4uQol1d2sgsGGzpWjyrT3sSehx
        MehJwt4HUGY+lDhNwxt5X9FSFGn2uYk/Fz05wWOFLxLBZtpwy8ERHQB9UHi7KEGzg4gsjqU5Q3jbgYon
        4RTVAZiBkATibXuFiCqm0/6tn8CsinoI4RTVAdAdhM8LZMtVVBE5tbZOOFtsLUIqsgMgv1OJimJR6+9+
        QlhbqWpGNnDL1PprVHQHuKvw9lE+Lpp4w30oPWSf78UhDNZoIKExkvxcOmJc4CBhbWRPJV1YF6LqhzW+
        dSDIi5Qwax9xgZaRSi8qnf5WWBspmtWN2LRgjf+eiNRvUT3UVxB7jYiiZwtrG7RaSp9LHKfqb4CDmSLl
        4fuqW38QEcrGUhLPHyLFyip1FbsRo2o/3QIqgUURx694+14sWuv5wtvFCabd6eGCKZa9kT+KKOfgUaGE
        rsnaRytQ43i4WcWL42spMRYIPe3bmEgAsTcDDxZRxF5Fbx8HSrTSm4W3J+JRNjOL/uwiYW8oUnlWWiO/
        04YZDItHY4tYiV9G/46I0mLOLV8jgETRSJE3yshb+4Cy9WOKbd7eEVm9XIrzg6kFaG8MXiQiyRdihjGb
        XpI6/PVZvVwaee/mhO5IrQARNn+6N6Xtxpi2Mk7yuQo8HxJrlkbUArY3CNEOPKBV8jbiuDVjA5TCJ6nD
        XhNn6OEco00SAxl/WhfJGNuLKGJa6AsxQc1WoDTnZyawlCKlyd8s0cFZD4MYQxSw9DaO6QAXiEjPY3CR
        w25vGCId20IpGW/fmA5AnuJSizVuH+mCfUQEpQOMoEcLvxLHeGAn0VrpACOpVD6eaVfrMHE6wEhiaZNo
        m715YAtXS6UDjCgCQX4PYTrAiolNmvYBtHYATjG19sBQR9iV9Fxhr8Um2pVSNAcoFWKsmR/gD7MmN7Gr
        zJ9FFc0B/N57sppq6j7CXg/GPkirqSI5AM2/z2bmnMOaYhnY11HiHOQW5yk1URQHYPD3Y2FtgTHO6H+P
        8NfluayEWBG0Nz62A/AGkgha2oBJfeExRPYRgTB/fXIUag5AQ8gfJUuq9hiiiWUdvlTICliPv5UYS6Wa
        SsCgkHFJNzuCNkWsev1a2Bse40z8h4kzhb2uhRW5FjUDONy6ZA8spSP47VnwRFFLbxX+6DXPaaJFQuhE
        bKhhB3DJNsARaDW7dgT2vR0mfBoUUy7+bmjdRpSqg1jOF9TaiTD6vovglHO/YGbp1hFofv22pwlDFzsi
        gEOOv8/1s5Cyvr+o4XiLiuSUpXEEyrPwFvq3fsLhYigxsie/j11IpWsBO5YotNBD4uUsjkAdgbCOsIfY
        2I/BwG+I8CfNNztofyJK1wEeIvsUthW9qTtHILhSSrKcQMGmx4khRPh0YyN7YIrZ6tDqIRXeEZjeUYdn
        Wt/L9ife+iHq25FVXMoztFAn+FFi2USNw6OEPw7PgiPwnTuLUfQQcY4oGQMUjqCM/KKimgce7vfSWSKN
        7GtqU1qEapHFzQVv9TQjaA0o17poX8+PuZfwJ5Ja/iS4VrdbqufULC3CZPA7aHVRKlkSPStdEE4StxWL
        imldKY1sQk8j+5qiRaBb3FiLQObRjmIhMcBg6bJ0ASDMS3HjIbSN8MUcJnCjvY7sa+qaHIEXZq7iXTTj
        hCynDfJogtjsMVQzs5U4V5SudbqIXuu3tdh/SBm80vMjLvM8MbPo6ymtWvrPgBKmQxaFZGOmrzgGeC/5
        dMs+wBtSu4jzhH+WtBAznerOrp5pI/xLxMvE0PlspX3zjDeiFZ7sRRTx9OcoA5lQdxdTRXPuU7gnnCJq
        rKCxbuD7L9KnaNJS84ud2kcK+1yBrfBTq49/VPh/gNew77+GaNq9w+EMyxjQaSFaal5c+3zhALFGPnUZ
        Lhb3F7X0ZOGvGam41DJoS+HL0RJfoZu4SgRTfiPsl0hY2FnUFIkZ9posJkUqKbMs2k3Y5wxXawVKuWoH
        ipoiaOT7/sinevQsutpSXeer5KcNPxBDj/S99hP2msSxiQWk6qhUv2n9QJv5vP8Lwr61dYyw1ySPL1VP
        mwlfqGp9zeSDzQfAFGyMQ4p8QschIlVXpwr7zFlUWlM88VhRW/RJfjWLqt6puuIoGvvMKVG7ZtNEcY44
        sAg122tCzelm6krtLewzZ+a3fl3dfjjGwUokLNhrAmnSqbpiP4Z95gT51jTFFFWuLapx2GtCzQodqStF
        4S7/3Nd8wJdqKx2gjdIBVlzpACuumRzgU4IdqjUprTryWem7yXDw2/rnvuaDZLUofpisDsUPk9VhfUpx
        srqkUqlUKpVKpVZL69b9H2PEUpa5BTv+AAAAAElFTkSuQmCC
</value>
  </data>
</root>